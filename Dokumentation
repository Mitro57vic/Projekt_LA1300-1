# Projekt-Dokumentation

‚òùÔ∏è Alle Text-Stellen, welche mit einem ‚úçÔ∏è beginnen, k√∂nnen Sie l√∂schen, sobald Sie die entsprechende Stellen ausgef√ºllt haben.

Filip Mitrovic, Julian Warnebold, Julian Hitz, Justus Meister, Lennard B√ºhler

| Datum | Version | Zusammenfassung                                              |
| ----- | ------- | ------------------------------------------------------------ |
|   22.11.2022    | 0.0.1   |  Gruppe kennengelernt, sich min Use case und WinForms vertraut gemacht, Projektdokumentation angefangen|
|       | ...     |                                                              |
|       | 1.0.0   |                                                              |

## 1 Informieren

### 1.1 Ihr Projekt

Wir machen ein Spiel in Visual Studions mit WinForms, das dem Spiel Pong √§hnlich ist.

### 1.2 User Stories

| US-‚Ññ | Verbindlichkeit | Typ  | Beschreibung                       |
| ---- | --------------- | ---- | ---------------------------------- |
| 1    |       kann         |   funktional   | Als User m√∂chte ich ein Schwierigkeit bei dem Gegner ausw√§hlen k√∂nnen, damit es verschiedene Schwierigkeiten gibt.  |
| 2  |          muss       |  funktional    |   Als User m√∂chte ich das ich sehen kann wie viele Punkte ich habe, damit ich weiss ob ich am gewinnnen oder verlieren bin.                                 |
|3|          muss       |   funktional   |   Als User m√∂chte ich das ich sehen kann wie viele Punkte mein Gegner hat, damit ich weiss ob ich am gewinnen oder verlieren bin.                                  |
|  4 |          muss       |  funktional    |    Als User m√∂chte ich eine auswahl von verschiedenen Ballfarben haben, damit das Spiel verschiedene Farben haben kann.                             |
| 5  |          kann       |  funktional    |     Als User m√∂chte ich eine auswahl von verschiedenen Blockstabfarben haben, damit das Spiel verschiedene Farben haben kann.                           |
| 6 |          kann       |    funktional  |    Als User m√∂chte ich eine Farbauswahl von dem Blockstab meines Gegners haben, damit das Spiel verschiedene Farben haben kann.                             |
| 7  |          kann       |  funktional    |      Als User m√∂chte ich das wenn ich einen Punkt mache ein Sound abgesoielt wird, damit das Spiel Lustiger wird.                               |
| 8 |          kann       |  funktional    |    Als User m√∂chte ich die Ballgeschwindigkeit √§ndern k√∂nnen, damit das Spiel schwieriger wird.                               |
| 9  |          kann       |  funktional    |     Als User m√∂chte ich dass w√§hrend des Spiel eine leise Musik abgespielt wird, damit das Spiel intreresanter wird.                              |
| 10 |          muss       |   funktional   |      Als User m√∂chte ich das sich der Ball bewegen kann, damit das Spiel laufen kann.                               |
| 11 |          muss       |   funktional   |   Als User m√∂chte ich dass sich die Blockst√§be nur vertikal bewegen k√∂nnen, damit man B√§lle abwehren kann.                            |
| 12 |          muss       |   funktional   |   Als User m√∂chte ich das der Ball an der Decke und am Boden abprallt, damit der Ball im Spiel bleibt.                             |
| 13 |          muss       |   funktional   |   Als User m√∂chte ich das das Spiel nachdem der erste Spieler 10 Punkte erreicht hat beendet wird, damit es dann einen Sieger gibt.                                |
| 14 |          muss       |   funktional   |   Als User m√∂chte ich das fals die 10 Punkte in der Zeit von 5 Minuten nicht erreicht werden das Spiel beendet wird und der Spieler mit mehr Punkten das Spiel gewinnt, fals gleich viele Punkte Unendschieden, damit das Spiel nicht unendlich lange ist.                                |

‚úçÔ∏è Jede User Story hat eine ganzzahlige Nummer (1, 2, 3 etc.), eine Verbindlichkeit (Muss oder Kann?), und einen Typ (Funktional, Qualit√§t, Rand). Die User Story selber hat folgende Form: *Als ein ü§∑‚Äç‚ôÇÔ∏è m√∂chte ich ü§∑‚Äç‚ôÇÔ∏è, damit ü§∑‚Äç‚ôÇÔ∏è*.

### 1.3 Testf√§lle

| TC-‚Ññ | Ausgangslage | Eingabe | Erwartete Ausgabe |
| ---- | ------------ | ------- | ----------------- |
| 1.1  |              |         |                   |
| ...  |              |         |                   |

‚úçÔ∏è Die Nummer hat das Format `N.m`, wobei `N` die Nummer der User Story ist, die der Testfall abdeckt, und `m` von `1` an nach oben gez√§hlt. Beispiel: Der dritte Testfall, der die zweite User Story abdeckt, hat also die Nummer `2.3`.

### 1.4 Diagramme



## 2 Planen

| AP-‚Ññ | Frist | Zust√§ndig | Beschreibung | geplante Zeit |
| ---- | ----- | --------- | ------------ | ------------- |
| 1.A  |       |           |              |               |
| ...  |       |           |              |               |

Total: 

‚úçÔ∏è Die Nummer hat das Format `N.m`, wobei `N` die Nummer der User Story ist, auf die sich das Arbeitspaket bezieht, und `m` von `A` an nach oben buchstabiert. Beispiel: Das dritte Arbeitspaket, das die zweite User Story betrifft, hat also die Nummer `2.C`.

‚úçÔ∏è Ein Arbeitspaket sollte etwa 45' f√ºr eine Person in Anspruch nehmen. Die totale Anzahl Arbeitspakete sollte etwa Folgendem entsprechen: `Anzahl R-Sitzungen` ‚ï≥ `Anzahl Gruppenmitglieder` ‚ï≥ `4`. Wenn Sie also zu dritt an einem Projekt arbeiten, f√ºr welches zwei R-Sitzungen geplant sind, sollten Sie auf `2` ‚ï≥ `3` ‚ï≥`4` = `24` Arbeitspakete kommen. Sollten Sie merken, dass Sie hier nicht gen√ºgend Arbeitspakte haben, denken Sie sich weitere "Kann"-User Stories f√ºr Kapitel 1.2 aus.

## 3 Entscheiden

‚úçÔ∏è Dokumentieren Sie hier Ihre Entscheidungen und Annahmen, die Sie im Bezug auf Ihre User Stories und die Implementierung getroffen haben.

## 4 Realisieren

| AP-‚Ññ | Datum | Zust√§ndig | geplante Zeit | tats√§chliche Zeit |
| ---- | ----- | --------- | ------------- | ----------------- |
| 1.A  |       |           |               |                   |
| ...  |       |           |               |                   |

‚úçÔ∏è Tragen Sie jedes Mal, wenn Sie ein Arbeitspaket abschlie√üen, hier ein, wie lang Sie effektiv daf√ºr hatten.

## 5 Kontrollieren

### 5.1 Testprotokoll

| TC-‚Ññ | Datum | Resultat | Tester |
| ---- | ----- | -------- | ------ |
| 1.1  |       |          |        |
| ...  |       |          |        |

‚úçÔ∏è Vergessen Sie nicht, ein Fazit hinzuzuf√ºgen, welches das Test-Ergebnis einordnet.

### 5.2 Exploratives Testen

| BR-‚Ññ | Ausgangslage | Eingabe | Erwartete Ausgabe | Tats√§chliche Ausgabe |
| ---- | ------------ | ------- | ----------------- | -------------------- |
| I    |              |         |                   |                      |
| ...  |              |         |                   |                      |

‚úçÔ∏è Verwenden Sie r√∂mische Ziffern f√ºr Ihre Bug Reports, also I, II, III, IV etc.

## 6 Auswerten

‚úçÔ∏è F√ºgen Sie hier eine Verkn√ºpfung zu Ihrem Lern-Bericht ein.
